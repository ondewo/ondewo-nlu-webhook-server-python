# Workflow: Build and Test ondewo-nlu-webhook-server-python
#
# This workflow automates the process of building, linting, and testing the
# ondewo-nlu-webhook-server-python project. It runs pre-commit hooks, performs
# linting using flake8, and executes unit, integration, and end-to-end tests.
#
# For more information, see:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build and test ondewo-nlu-webhook-server-python

on:
  push:
    branches: [ "master" ] # Trigger workflow on pushes to the master branch
  pull_request:
    branches: [ "master" ] # Trigger workflow on pull requests targeting the master branch

permissions:
  contents: read # Allow read access to repository contents

jobs:

  # Job: Pre-commit hooks validation
  job-pre-commit-checks:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment for pre-commit hooks
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13" # Specify Python version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-static-code-checks.txt

      # Step 4: Run pre-commit hooks
      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.1

  # Job: Build and test unit and integration tests
  job-build-and-test-unit-int:
    needs: job-pre-commit-checks
    runs-on: ubuntu-latest
    services:
      docker: # Enable Docker service for running containerized tests
        image: docker:dind
        options: --privileged
        ports:
          - 2375:2375 # Expose Docker daemon port

    steps:
      # Step 1: Check out the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13" # Specify Python version

      # Step 3: Install dependencies: requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      # Step 4: Run unit and integration tests
      - name: Run unit and integration tests
        run: |
          # Export environment variables for tests
          set -a
          source envs/local.env
          set +a
          export PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE:.:..:/opt/ondewo-nlu-webhook-server-python
          # Execute the unit and integration test script
          tests/pytest_utils/scripts/webhook_server_tests_unit_int.sh tests/ondewo_nlu_webhook_server

  # Job: Build and test unit and integration tests
  job-build-and-test-e2e:
    needs: job-build-and-test-unit-int
    runs-on: ubuntu-latest
    services:
      docker: # Enable Docker service for running containerized tests
        image: docker:dind
        options: --privileged
        ports:
          - 2375:2375 # Expose Docker daemon port

    steps:
      # Step 1: Check out the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13" # Specify Python version

      # Step 3: Install dependencies: requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      # Step 4: Install Docker for e2e testing
      - name: Install Docker
        if: env.GITHUB_ACTIONS == 'true'
        run: |
          # Check if containerd and containerd.io are installed, and remove them if present
          if dpkg -l | grep -q containerd; then
            echo "Removing containerd package..."
            sudo apt-get remove -y containerd
          fi
          if dpkg -l | grep -q containerd.io; then
            echo "Removing containerd.io package..."
            sudo apt-get remove -y containerd.io
          fi
          # Check if docker.io is installed, and install if not
          if ! dpkg -l | grep -q docker.io; then
            echo "docker.io not found, installing Docker..."
            sudo apt-get update
            sudo apt-get install -y docker.io
          else
            echo "docker.io is already installed."
          fi
          # Check if user is already in the docker group
          if ! groups $USER | grep -q '\bdocker\b'; then
            echo "Adding $USER to docker group..."
            sudo usermod -aG docker $USER
            newgrp docker
          else
            echo "$USER is already in the docker group."
          fi

      # Step 5: Run end-to-end tests
      - name: Run end-to-end tests
        run: |
          # Export environment variables for tests
          set -a
          source envs/local.env
          set +a
          export PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE:.:..:/opt/ondewo-nlu-webhook-server-python
          # Execute the e2e test script
          tests/pytest_utils/scripts/webhook_server_tests_e2e.sh tests/e2e
